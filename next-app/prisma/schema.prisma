generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  email       String   @unique
  password    String
  profilePic  String   @default("https://res.cloudinary.com/djnc80otm/image/upload/v1727369267/szstkgsxuhrnwixuvi1s.avif")
  bio         String   @default("")
  location    String   @default("")
  link        String   @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tweets      Tweet[]
  likes       Like[]
  comments    Comment[]
  followers   Follow[] @relation("follower")
  following   Follow[] @relation("following")
  bookmarks   Bookmark[]
}

model Tweet {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  likes     Like[]
  comments  Comment[]
  bookmarks Bookmark[]
  media     Media[]  @relation("TweetMedia")
}

model Media {
  id        Int      @id @default(autoincrement())
  type      String   @default("photo") 
  url       String
  tweet     Tweet    @relation("TweetMedia", fields: [tweetId], references: [id])
  tweetId   Int
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   Int
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   Int
}

model Follow {
  id          Int  @id @default(autoincrement())
  follower    User @relation("follower", fields: [followerId], references: [id])
  followerId  Int
  following   User @relation("following", fields: [followingId], references: [id])
  followingId Int
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   Int
}